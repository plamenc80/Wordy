<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uZniyDxLHAAAAABJRU5ErkJggg==
</value>
  </data>
</root>